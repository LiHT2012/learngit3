mysql BIT_LENGTH()获取字符串的比特长度。

需要注意的是，在获取中文字符串比特长度时，不同编码获取的比特长度不一样，请看下面两个实例：

1. 在GBK 编码下：

select bit_length('中国');  
结果：32
1个中文字符占2个字节，1个字节占8位，所以总bit比特长度32

 

2.在UTF-8 编码下

select bit_length('中国'); 
结果：48
1个中文字符占3个字节，1个字节占8位，所以总bit比特长度48 

 

下面看一下非中文字符串实例：

SELECT BIT_LENGTH(  'manong' )
结果：48
1个英文字符占1个字节，1个字节占8位，所以结果为48

select sum(bit_length(data))/(1024*1024)
        from senior_data
        join (select two_dimension.second_ID from two_dimension where type = 221200 or type = 221201) two 
        on senior_data.data_id = two.second_ID;






http://blog.csdn.net/wyzxg/article/details/1630692
sql的truncate和delete的区别：
1、在功能上，truncate是清空一个表的内容，它相当于delete from table_name。
2、delete是dml操作，truncate是ddl操作；因此，用delete删除整个表的数据时，会产生大量的roolback，占用很多的rollback segments， 而truncate不会。
3、在内存中，用delete删除数据，表空间中其被删除数据的表占用的空间还在，便于以后的使用，另外它是“假相”的删除，相当于windows中用delete删除数据是把数据放到回收站中，还可以恢复，当然如果这个时候重新启动系统（OS或者RDBMS），它也就不能恢复了！
而用truncate清除数据，内存中表空间中其被删除数据的表占用的空间会被立即释放，相当于windows中用shift+delete删除数据，不能够恢复！
4、truncate 调整high water mark 而delete不；truncate之后，TABLE的HWM退回到 INITIAL和NEXT的位置（默认）delete 则不可以。
5、truncate 只能对TABLE，delete 可以是table,view,synonym。
6、TRUNCATE TABLE 的对象必须是本模式下的，或者有drop any table的权限 而 DELETE 则是对象必须是本模式下的，或被授予 DELETE ON SCHEMA.TABLE 或DELETE ANY TABLE的权限。
7、在外层中，truncate或者delete后，其占用的空间都将释放。
8、truncate和delete只删除数据，而drop则删除整个表（结构和数据）。 

 

delete 用法

Oracle Delete Statements 
Version 10.2 
  
Basic Delete Statements 
1.Delete All Rows:  DELETE <table_name>
                               or
                               DELETE FROM <table_name>; 
                               CREATE TABLE t  AS
                               SELECT *
                                FROM all_tables;

                                SELECT COUNT(*)
                                FROM t;

DELETE FROM t;

COMMIT;

SELECT COUNT(*)
FROM t;


2.Delete Selective Rows

 DELETE FROM <table_name>
WHERE <condition>; 
CREATE TABLE t AS
SELECT *
FROM all_tables;

SELECT COUNT(*)
FROM t;

DELETE FROM t
WHERE table_name LIKE '%MAP';

COMMIT;

SELECT COUNT(*)
FROM t;


3.Delete From A SELECT Statement

DELETE FROM (<SELECT Statement>); 
CREATE TABLE t AS
SELECT *
FROM all_tables;

SELECT COUNT(*)
FROM t;

DELETE FROM (
  SELECT * FROM t WHERE table_name LIKE '%MAP');

SELECT COUNT(*)
FROM t;


4.Delete With Returning Clause

 DELETE FROM (<SELECT Statement>); 
CREATE TABLE t AS
SELECT *
FROM all_tables;

set serveroutput on

DECLARE
 r  urowid; 
BEGIN
  DELETE FROM t
  WHERE rownum = 1
  RETURNING rowid INTO r;

  dbms_output.put_line(r);
END;
/ 

5.Delete Restricted To A Partition

DELETE FROM <table_name>
PARTITION <partition_name>; 
DELETE FROM sales PARTITION (q1_2001_invoices); 
Delete From A Remote Database DELETE FROM <table_name>@<database_link> 
DELETE FROM t@remote_db; 
 

 在删除大数据量时(一个表中大部分数据时),

方法：
1、先将不需要删除的数据复制到一个临时表中
2、trunc table 表
3、将不需要删除的数据复制回来。

delete只循环了一次,(去查并删)
游标循环了二次,(先查出来,再循环一次删)

@Scheduled注解为定时任务，cron表达式里写执行的时机
@Scheduled(cron="0/10 * *  * * ? ")   //每10秒执行一次

cron表达式详解：    

一个cron表达式有至少6个（也可能7个）有空格分隔的时间元素。

按顺序依次为
1  秒（0~59）
2  分钟（0~59）
3 小时（0~23）
4  天（0~31）
5 月（0~11）
6  星期（1~7 1=SUN 或 SUN，MON，TUE，WED，THU，FRI，SAT）
7.年份（1970－2099）
其中每个元素可以是一个值(如6),一个连续区间(9-12),一个间隔时间(8-18/4)(/表示每隔4小时),一个列表(1,3,5),通配符。由于"月份中的日期"和"星期中的日期"这两个元素互斥的,必须要对其中一个设置?.
0 0 10,14,16 * * ? 每天上午10点，下午2点，4点
0 0/30 9-17 * * ?   朝九晚五工作时间内每半小时
0 0 12 ? * WED 表示每个星期三中午12点
"0 0 12 * * ?" 每天中午12点触发 
"0 15 10 ? * *" 每天上午10:15触发 
"0 15 10 * * ?" 每天上午10:15触发 
"0 15 10 * * ? *" 每天上午10:15触发 
"0 15 10 * * ? 2005" 2005年的每天上午10:15触发 
"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发 
"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发 
"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 
"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发 
"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发 
"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发 
"0 15 10 15 * ?" 每月15日上午10:15触发 
"0 15 10 L * ?" 每月最后一日的上午10:15触发 
"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发 
"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发 
"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发 
有些子表达式能包含一些范围或列表
例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT”
“*”字符代表所有可能的值
“/”字符用来指定数值的增量
例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟
        在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样
“？”字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值
当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？”
“L” 字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写
如果在“L”前有具体的内容，它就具有其他的含义了。例如：“6L”表示这个月的倒数第６天
注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题
W 字符代表着平日(Mon-Fri)，并且仅能用于日域中。它用来指定离指定日的最近的一个平日。大部分的商业处理都是基于工作周的，所以 W 字符可能是非常重要的。
例如，日域中的 15W 意味着 "离该月15号的最近一个平日。" 假如15号是星期六，那么 trigger 会在14号(星期五)触发，因为星期四比星期一离15号更近。
C：代表“Calendar”的意思。它的意思是计划所关联的日期，如果日期没有被关联，则相当于日历中所有日期。例如5C在日期字段中就相当于日历5日以后的第一天。1C在星期字段中相当于星期日后的第一天。
字段   允许值   允许的特殊字符
秒           0-59           , - * /
分           0-59           , - * /
小时           0-23           , - * /
日期           1-31           , - * ? / L W C
月份           1-12 或者 JAN-DEC           , - * /
星期           1-7 或者 SUN-SAT           , - * ? / L C #
年（可选）           留空, 1970-2099           , - * /
