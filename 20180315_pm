mysql function示例：
1）
CREATE DEFINER=`dbcool`@`%` FUNCTION `newFloor`(resId varchar(24),resType smallint) RETURNS int(11)
BEGIN
UPDATE dbcool.dbc_floor  SET floor = @floor:=floor + 1  WHERE res_id = resId AND res_type = resType;
RETURN @floor;
END

2）
CREATE DEFINER=`dbcool`@`%` FUNCTION `nextValue`() RETURNS int(11)
BEGIN
declare i int;  
    set i=(select ifnull(max(asc_value),0) from short_long_linkmap) +1; 
return i; 
END

xml中对function的调用
<select id="getNextValue" resultType="java.lang.Integer">
    select nextValue();
</select>

int i = 1<<6;//将1向左移6位后得的值赋值给i;右空位补0

int n = (int)(4&7);//4和7的二进制格式按位与，结果再转成十进制

number >>>=6;//number向右移动6位再赋值给number自身，等同于number=number>>6;

@EnableAutoConfiguration
@RestController
@RequestMapping("/dbc/api/link")
@CrossOrigin
public class ShortLongLinkController {
	@Autowired
	private ShortLongLinkService shortLongLinkService;
	private Logger logger = LogManager.getLogger(ShortLongLinkController.class);
	@RequestMapping(value = "/get/short", method = RequestMethod.POST)
	public String getShortByLongUrl(@RequestBody Map<String, String> param, HttpServletRequest request)
			throws Exception {}
}
@Service
public class ShortLongLinkServiceImpl implements ShortLongLinkService {
	@Autowired
	private ShortLongLinkmapDao shortLongLinkmapDao;
}

@Repository
public class ShortLongLinkmapDaoImpl implements ShortLongLinkmapDao {
	@Autowired
	private ShortLongLinkmapMapper shortLongLinkmapMapper;
}
